@using EM.Web.Models.ViewModels.Venues

@model PaginationViewModel<VenueListViewModel>

@{
    ViewData["Title"] = "Venue List";
}

<h1 class="text-center">Venue List</h1>

<form class="col-12 col-md-6 mx-auto" asp-controller="Venues" asp-action="All" method="get">
    <div class="col-md-6 mx-auto input-group">
        <input class="form-control" placeholder="Search by name or city..." type="text" name="searchQuery" value="@ViewData["SearchQuery"]" />
        <button class="btn btn-primary" type="submit"><i class="fas fa-search"></i> Search</button>
    </div>
</form>

@if (ViewData["SearchQuery"] is not null)
{
    <p class="fs-3 text-center">Results for "@ViewData["SearchQuery"]"</p>
}

<div class="container my-3 p-0">
    @if (Model.Items.Any())
    {
        @foreach (var venue in Model.Items)
        {
            <div class="card mb-3 col-md-9 mx-auto">
                <div class="row g-0">
                    <div class="col-md-4">
                        <img src="@venue.ImageUrl" alt="@venue.Name" class="img-fluid rounded-start">
                    </div>
                    <div class="col-md-8">
                        <div class="card-body d-flex flex-column justify-content-center h-100 gap-1 py-0">
                            <h3 class="card-title">@venue.Name</h3>
                            <p class="card-text"><i class="fas fa-map-marker-alt"></i> @venue.Address, @venue.CityName</p>
                            <a class="btn btn-primary w-fit-content" asp-controller="Venues" asp-action="Details" asp-route-id="@venue.Id">See more</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p class="fw-bold text-center">Sorry, no results found...</p>
    }
</div>

<nav aria-label="Venue pagination">
    <ul class="pagination justify-content-center">
        @{
            Model.DisplayPageCount = Math.Min(Model.DisplayPageCount, Model.PageCount);

            var middle = (Model.DisplayPageCount + 1) / 2;

            var startIndex = Math.Max(1, Model.CurrentPage - middle);
            var endIndex = Math.Min(Model.PageCount, Model.CurrentPage + middle);
        }

        @for (int pageIndex = startIndex; pageIndex <= endIndex; pageIndex++)
        {
            @if (pageIndex == Model.CurrentPage)
            {
                <li class="page-item active" aria-current="page">
                    <span class="page-link">@pageIndex</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link"
               asp-area="Admin"
               asp-controller="Venues"
               asp-action="All"
               asp-route-page="@pageIndex"
               asp-route-perPage="@Model.ItemsPerPage"
               asp-route-name="@ViewData["SearchQuery"]">
                        @pageIndex
                    </a>
                </li>
            }
        }
    </ul>
</nav>
