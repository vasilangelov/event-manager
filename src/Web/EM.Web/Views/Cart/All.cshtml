@using EM.Web.Models.ViewModels.Tickets

@model IEnumerable<TicketViewModel>

@{
    ViewData["Title"] = "Cart";
}

<h1 class="text-center">Cart</h1>

@if (Model is not null && Model.Any())
{
    <div class="container col-md-9 p-0">
        <div class="row mb-3">
            @foreach (var ticket in Model)
            {
                <div class="border-top-1 border-top py-3 row">
                    <div class="col-6"><i class="fas fa-ticket-alt"></i> @(ticket.Quantity)x @ticket.Type at @ticket.EventName</div>
                    <div class="col-6 text-end">
                        <span class="fw-bold me-3">@ticket.Quantity x @ticket.Price.ToString("F2")</span>
                        <a class="btn btn-danger" asp-controller="Cart" asp-action="Remove" asp-route-id="@ticket.Id">Remove</a>
                    </div>
                </div>
            }
        </div>
        <div class="border-top border-5 py-3 d-flex align-items-baseline justify-content-end mb-3 gap-3">
            <span class="fw-bold">Total: @Model.Aggregate(0m, (acc, cur) => acc + cur.Price * cur.Quantity).ToString("F2")</span>
            <a class="btn btn-primary w-fit-content" asp-controller="Payment" asp-action="Checkout">Checkout</a>
        </div>
    </div>
}
else
{
    <div class="fs-4 text-center">It seems that your cart is empty...</div>
}
